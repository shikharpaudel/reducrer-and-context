{"ast":null,"code":"var _jsxFileName = \"C:\\\\udemy learning\\\\useReducer\\\\06-usereducer-starting-project\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthProvider from './components/store/auth-provider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // useEffect(() => {\n  // const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n  //if (storedUserLoggedInInformation === '1') {\n  //setIsLoggedIn(true);\n  //}\n  //}, []);\n\n  //const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //localStorage.setItem('isLoggedIn', '1');\n  //setIsLoggedIn(true);\n  //};\n\n  //const logoutHandler = () => {\n  //localStorage.removeItem('isLoggedIn');\n  //setIsLoggedIn(false);\n  //};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthProvider","App","isLoggedIn","loginHandler","logoutHandler"],"sources":["C:/udemy learning/useReducer/06-usereducer-starting-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthProvider from './components/store/auth-provider';\n\nfunction App() {\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n // useEffect(() => {\n   // const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    //if (storedUserLoggedInInformation === '1') {\n      //setIsLoggedIn(true);\n    //}\n  //}, []);\n\n  //const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    //localStorage.setItem('isLoggedIn', '1');\n    //setIsLoggedIn(true);\n  //};\n\n  //const logoutHandler = () => {\n    //localStorage.removeItem('isLoggedIn');\n    //setIsLoggedIn(false);\n  //};\n\n  return (\n    <React.Fragment>\n      \n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n     \n      </React.Fragment>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,YAAY,MAAM,kCAAkC;AAAC;AAE5D,SAASC,GAAG,GAAG;EACb;;EAED;EACE;;EAEC;EACE;EACF;EACF;;EAEA;EACE;EACA;EACA;EACA;EACF;;EAEA;EACE;EACA;EACF;;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBAEb,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd;MAAA,WACG,CAACC,UAAU,iBAAI,QAAC,KAAK;QAAC,OAAO,EAAEC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/CD,UAAU,iBAAI,QAAC,IAAI;QAAC,QAAQ,EAAEE;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEU;AAGvB;AAAC,KAnCQH,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}